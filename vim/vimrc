set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundl
" required! 
Plugin 'gmarik/Vundle.vim'

" My Plugins here:
"
" original repos on github
Plugin 'altercation/vim-colors-solarized'
Plugin 'majutsushi/tagbar'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'jmcantrell/vim-virtualenv'
"Plugin 'Valloric/YouCompleteMe'
Plugin 'davidhalter/jedi-vim'
Plugin 'bling/vim-airline'
Plugin 'rking/ag.vim'
Plugin 'airblade/vim-gitgutter'
Plugin 'powerline/fonts'
" Github repos of the user 'vim-scripts'
" => can omit the username part
"Plugin 'Tagbar'

" non github repos
"Plugin 'git://git.wincent.com/command-t.git'
" ...
call vundle#end()             " required
filetype plugin indent on     " required
augroup vimrc_autocmds
    autocmd!
    " highlight characters past column 120
    autocmd FileType python highlight Excess ctermbg=DarkGrey guibg=Black
    autocmd FileType python match Excess /\%120v.*/
    autocmd FileType python set nowrap
    augroup END
map <F2> :NERDTreeToggle<CR>
map <F3> :TagbarToggle<CR>
map <F4> :bNext<CR>
map <C-Tab> <C-w>w
set background=dark
set t_Co=16
let g:solarized_termcolors=16
:colorscheme solarized
:syntax enable
set number
augroup reload_vimrc " {
    autocmd!
    autocmd BufWritePost $MYVIMRC source $MYVIMRC
augroup END " }
set hidden
" Enable the list of buffers
let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
set guifont=Anonymous\ Pro\ for\ Powerline\ 11
let g:airline_exclude_filenames = ['NERD_tree_1', 'MiniBufExplorer', 'Tagbar']
let g:NERDTreeChDirMode = 2
"Display airline even if one window
set laststatus=2
" For ycm, complete on enter
inoremap <expr> <CR>       pumvisible() ? "\<C-y>" : "\<CR>"
" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <leader>l :bnext<CR>

" Move to the previous buffer
nmap <leader>h :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>bq :bp <BAR> bd #<CR>

" Show all open buffers and their status
nmap <leader>bl :ls<CR>
set tabstop=4
set expandtab
set softtabstop=4
set shiftwidth=4
